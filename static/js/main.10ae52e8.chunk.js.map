{"version":3,"sources":["Calculator/Claculator.js","App.js","reportWebVitals.js","index.js","Calculator/Calculator.module.css"],"names":["Calculator","toFar","this","props","distance","push","splice","toClose","className","classes","join","type","placeholder","value","Math","round","miliradians","readOnly","onChange","inputChange","buttons","onClick","calculateDistance","resetValue","React","Component","App","mil","state","setState","event","target","addValuesInList","list","m","ml","meters","mils","addValues","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+PA4CeA,E,4JAxCb,WACE,IAAMC,EAAQ,CAAC,YACXC,KAAKC,MAAMC,SAAW,KACxBH,EAAMI,KAAK,eAEXJ,EAAMK,OAAO,CAAC,IAGhB,IAAMC,EAAU,CAAC,YAOjB,OANIL,KAAKC,MAAMC,SAAW,KAA+B,KAAxBF,KAAKC,MAAMC,SAC1CG,EAAQF,KAAK,eAEbE,EAAQD,OAAO,CAAC,IAIhB,sBAAKE,UAAWC,IAAQT,WAAxB,UACE,oBAAIQ,UAAWP,EAAMS,KAAK,KAA1B,sBACA,oBAAIF,UAAWD,EAAQG,KAAK,KAA5B,wBACA,uBACAC,KAAK,OACLC,YAAY,mBACZC,MAAOC,KAAKC,MAAMb,KAAKC,MAAMa,aAC7BC,UAAQ,IAER,uBACAN,KAAK,OACLC,YAAY,qBACZC,MAAOX,KAAKC,MAAMC,SAClBc,SAAUhB,KAAKC,MAAMgB,cAErB,sBAAKX,UAAWC,IAAQW,QAAxB,UACE,wBAAQT,KAAK,SAASU,QAASnB,KAAKC,MAAMmB,kBAA1C,eACA,wBAAQX,KAAK,QAAQU,QAASnB,KAAKC,MAAMoB,WAAzC,6B,GAlCeC,IAAMC,WCiEhBC,E,kDA9Db,WAAYvB,GAAQ,IAAD,8BACf,cAAMA,IAWVmB,kBAAoB,WAClB,IACMK,EAAM,KADQ,EAAKC,MAAMxB,SACG,KACvB,OAARuB,GACD,EAAKE,SAAS,CACZb,YAAaW,KAjBA,EAsBnBR,YAAc,SAACW,GACb,EAAKD,SAAS,CAACzB,SAAU0B,EAAMC,OAAOlB,SAvBrB,EA0BnBU,WAAa,WACX,EAAKM,SAAS,CACZzB,SAAU,GACVY,YAAa,MA7BE,EAiCnBgB,gBAAkB,WAChB,IAAIC,EAAO,EAAKL,MAAMK,KAChBC,EAAI,EAAKN,MAAMxB,SACf+B,EAAK,EAAKP,MAAMZ,YAEtBiB,EAAK5B,KAAK,CACR+B,OAAQF,EACRG,KAAMF,KAtCN,EAAKP,MAAQ,CACXxB,SAAU,GACVY,YAAa,GACbiB,KAAM,CAAC,CACLG,OAAQ,GACRC,KAAM,MAPK,E,0CA6CnB,WACE,OACA,sBAAK7B,UAAU,WAAf,UACE,2EACA,cAAC,EAAD,CACAJ,SAAUF,KAAK0B,MAAMxB,SACrBY,YAAad,KAAK0B,MAAMZ,YACxBM,kBAAmBpB,KAAKoB,kBACxBH,YAAajB,KAAKiB,YAClBI,WAAYrB,KAAKqB,WACjBe,UAAWpC,KAAK8B,yB,GAzDJR,IAAMC,WCQTc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,WAAa,+BAA+B,QAAU,+B","file":"static/js/main.10ae52e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Calculator.module.css'\r\n\r\nclass Calculator extends React.Component{\r\n  render(){\r\n    const toFar = ['distance'];\r\n    if (this.props.distance > 1600) {\r\n      toFar.push('showDisplay')\r\n    } else {\r\n      toFar.splice([1])\r\n    }\r\n\r\n    const toClose = ['distance'];\r\n    if (this.props.distance < 100 && this.props.distance !== '') {\r\n      toClose.push('showDisplay')\r\n    } else {\r\n      toClose.splice([1])\r\n    }\r\n\r\n    return(\r\n      <div className={classes.Calculator}>\r\n        <h2 className={toFar.join(' ')}>Too far!</h2>\r\n        <h2 className={toClose.join(' ')}>Too close!</h2>\r\n        <input \r\n        type='text' \r\n        placeholder='Distance in mil.' \r\n        value={Math.round(this.props.miliradians)}\r\n        readOnly>\r\n        </input>\r\n        <input \r\n        type='text'\r\n        placeholder='Distance in meters' \r\n        value={this.props.distance} \r\n        onChange={this.props.inputChange}>\r\n        </input>\r\n        <div className={classes.buttons}>\r\n          <button type='submit' onClick={this.props.calculateDistance}>=</button>\r\n          <button type='reset' onClick={this.props.resetValue}>Reset</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Calculator;","import './App.css';\nimport React from 'react';\nimport Calculator from './Calculator/Claculator'\n\nclass App extends React.Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        distance: '',\n        miliradians: '',\n        list: [{\n          meters: [],\n          mils: []\n        }]\n      }\n    }\n\n  calculateDistance = () => {\n    const oldDistance = this.state.distance;\n    const mil = 1002 - (oldDistance / 4.17);\n    if(mil !== 1002) {\n      this.setState({\n        miliradians: mil\n      })\n    }\n  }\n\n  inputChange = (event) => {\n    this.setState({distance: event.target.value})\n  }\n\n  resetValue = () => {\n    this.setState({\n      distance: '',\n      miliradians: ''\n    })\n  }\n\n  addValuesInList = () => {\n    let list = this.state.list;\n    const m = this.state.distance;\n    const ml = this.state.miliradians;\n    \n    list.push({\n      meters: m,\n      mils: ml\n    })\n  }\n\n\n  render(){\n    return(\n    <div className='mainPart'>\n      <h1>Arthillerry calculator for Hell Let Loose</h1>\n      <Calculator\n      distance={this.state.distance}\n      miliradians={this.state.miliradians}\n      calculateDistance={this.calculateDistance}\n      inputChange={this.inputChange}\n      resetValue={this.resetValue}\n      addValues={this.addValuesInList}\n      />\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calculator\":\"Calculator_Calculator__1ZbCI\",\"buttons\":\"Calculator_buttons__r6oil\"};"],"sourceRoot":""}